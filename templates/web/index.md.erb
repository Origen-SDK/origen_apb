% render "layouts/basic.html" do

%# HTML tags can be embedded in mark down files if you want to do specific custom
%# formatting like this, but in most cases that is not required.
<h1><%= Origen.app.namespace %> <span style="font-size: 14px">(<%= Origen.app.version %>)</span></h1>

### Purpose

This plugin...

### How To Install

In your Gemfile add:

~~~ruby
gem "<%= Origen.app.name %>"
~~~

or if your application is a plugin, then add this to your <code>.gemspec</code>

~~~ruby
spec.add_runtime_dependency "<%= Origen.app.name %>", ">= <%= Origen.app.version %>"
~~~

__NOTE:__  In the case of a plugin, you will also need to <code>require '<%= Origen.app.name %>'</code> somewhere in your environment.


### How To Use

The driver supports sub_block instantiation and DUTs with multiple APB slaves.

Here is an example integration:

~~~ruby
class Pioneer

  include Origen::TopLevel

  def initialize
    add_pin :psel
    add_pin :paddr
    add_pin :pwrite
    add_pin :prdata
    add_pin :penable
    add_pin :pstrb

    add_pin :psel1
    add_pin :paddr1
    add_pin :pwrite1
    add_pin :prdata1
    add_pin :penable1
    add_pin :pstrb1


    sub_block :apb, class_name: 'OrigenApb::Driver',
                     psel_pin:           pin(:psel),
                     paddr_pin:          pin(:paddr),
                     pwrite_pin:         pin(:pwrite),
                     prdata_pin:         pin(:prdata)
                     penable_pin:        pin(:penable)
                     pstrb_pin:          pin(:pstrb)

    # create a driver for a 2nd port like this
    # note different configuration settings can be used
    sub_block :apb2, class_name: 'OrigenApb::Driver',
                     psel_pin:           pin(:psel1),
                     paddr_pin:          pin(:paddr1),
                     pwrite_pin:         pin(:pwrite1),
                     prdata_pin:         pin(:prdata1)
                     penable_pin:        pin(:penable1)
                     pstrb_pin:          pin(:pstrb1)
  end

end

dut.apb           # => apb driver for the first port (psel, paddr, pwrite, prdata, penable, pstrb)
dut.apb2          # => apb driver for the second port (psel1, paddr1, pwrite1, prdata1, penable1, pstrb1)
~~~


% end
