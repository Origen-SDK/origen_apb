// ***************************************************************************
// GENERATED:
//   Time:    19-Jun-2018 19:54PM
//   By:      Priyavadan Kumar
//   Command: origen g example -t dev.rb -e j750.rb
// ***************************************************************************
// ENVIRONMENT:
//   Application
//     Version:   0.1.0
//   Origen
//     Source:    https://github.com/Origen-SDK/origen
//     Version:   0.33.1
//   Plugins
//     atp:                      1.1.2
//     origen_doc_helpers:       0.6.2
//     origen_testers:           0.19.0
//     origen_updater:           0.7.0
// ***************************************************************************
import tset apb;                                                                                
svm_only_file = no;                                                                             
opcode_mode = extended;                                                                         
compressed = yes;                                                                               
                                                                                                
vector ($tset, tclk, tdi, tdo, tms, resetb, pclk, preset, paddr, pprot, psel, penable, pwrite, pwdata, pstrb, pready, prdata, pslverr)                               
{                                                                                               
start_label pattern_st:                                                                         
//                                                                                              t t t t r p p p                                p   p p p p                                p    p p                                p
//                                                                                              c d d m e c r a                                p   s e w w                                s    r r                                s
//                                                                                              l i o s s l e d                                r   e n r d                                t    e d                                l
//                                                                                              k       e k s d                                o   l a i a                                r    a a                                v
//                                                                                                      t   e r                                t     b t t                                b    d t                                e
//                                                                                                      b   t                                        l e a                                     y a                                r
//                                                                                                                                                   e                                                                            r
// Wait for 240ns
repeat 6                                                         > apb                          0 0 X 0 0 X X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXX X X X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXXX X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
// Write to top-level register using reg model
// ==== APB Write Transaction ====
// Reg: top_reg Addr: 0x20000000 Data: 0x5555aaaa
                                                                 > apb                          0 0 X 0 1 X X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 1 1 1 01010101010101011010101010101010 1111 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
// Write to top-level register using data/address
// ==== APB Write Transaction ====
// Addr: 0x20000000 Data: 0xaaaa5555
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 1 1 1 10101010101010100101010101010101 1111 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
// Read from top-level register using data/address
// ==== APB Read Transaction ====
// Addr: 0x20000000 Data: 0xaaaa5555
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 1 1 0 00000000000000000000000000000000 0000 X HLHLHLHLHLHLHLHLLHLHLHLHLHLHLHLH X ;
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
// Write to block-level register
// ==== APB Write Transaction ====
// Reg: control Addr: 0x22000000 Data: 0xba5eba11
                                                                 > apb                          0 0 X 0 1 X X 00100000000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100010000000000000000000000000 XXX 1 1 1 10111010010111101011101000010001 1111 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100010000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
// Read from block-level register
// ==== APB Read Transaction ====
// Reg: status Addr: 0x22000004 Data: 0x220000
                                                                 > apb                          0 0 X 0 1 X X 00100010000000000000000000000000 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
                                                                 > apb                          0 0 X 0 1 X X 00100010000000000000000000000100 XXX 1 1 0 00000000000000000000000000000000 0000 X LLLLLLLLLLHLLLHLLLLLLLLLLLLLLLLL X ;
                                                                 > apb                          0 0 X 0 1 X X 00100010000000000000000000000100 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
// Wait for 240ns
repeat 6                                                         > apb                          0 0 X 0 1 X X 00100010000000000000000000000100 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
// ######################################################################
// ## Pattern complete
// ######################################################################
end_module                                                       > apb                          0 0 X 0 0 X X 00100010000000000000000000000100 XXX 0 0 0 00000000000000000000000000000000 0000 X XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX X ;
}                                                                                               
